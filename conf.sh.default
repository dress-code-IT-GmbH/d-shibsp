#!/usr/bin/env bash

# settings for docker build, run and exec

main() {
  init_sudo
  set_volume_mapping
  set_image_and_container_name
  set_users
  set_buildargs
  set_run_args
  set_network
  set_vol_mapping
}


set_volume_mapping() {
    DOCKERVOL_ROOT='/docker_volumes'
    SHAREDDATA_ROOT="${DOCKERVOL_ROOT}/01shared_data"    # data shared between containers
}


set_image_and_container_name() {
    # This IMGID qualifies image, container, user and IP adddress; this is helpful for managing
    # processes on the docker host etc.
    IMGID='99'  # range from 02 .. 99; must be unique per node
    PROJSHORT='sp1exampleorg'  # lowercase!
    export IMAGENAME="r2h2/$PROJSHORT${IMGID}"
    export CONTAINERNAME="${IMGID}$PROJSHORT"
}


set_users() {
    export SHIBDUSER="shibd${IMGID}"
    export SHIBDUID="80${IMGID}"
    export HTTPDUSER="httpd${IMGID}"
    export HTTPDUID="90${IMGID}"
    export START_AS_ROOT='True'      # 'True' e.g. for apache to fall back to www user
}


set_buildargs() {
    export BUILDARGS="
        --build-arg SHIBDUSER=$SHIBDUSER
        --build-arg SHIBDUID=$SHIBDUID
        --build-arg HTTPDUSER=$HTTPDUSER
        --build-arg HTTPDUID=$HTTPDUID
    "
}


set_run_args() {
    export ENVSETTINGS=""
    export STARTCMD='/start.sh'  # unset or blank to use image default
}


set_network() {
    # The docker0 bridge has dynamic addresses, whereas a custom bridge allows predictable addresses
    NETWORK=dockernet
    set +e  # errexit off
    $sudo docker network ls | awk '{print $2}' | grep $NETWORK > /dev/null
    if (( $? == 1)); then
        $sudo docker network create --driver bridge --subnet=10.1.1.0/24 \
                  -o com.docker.network.bridge.name=br-$NETWORK $NETWORK
    fi
    export NETWORKSETTINGS="
        --net $NETWORK
        --ip 10.1.1.${IMGID}
    "
}


set_vol_mapping() {
    create_user $SHIBDUSER $SHIBDUID
    create_user $HTTPDUSER $HTTPDUID
    DOCROOT='sp1ExampleOrg'

    VOLROOT="${DOCKERVOL_ROOT}/$CONTAINERNAME"  # container volumes on docker host
    map_volume "$VOLROOT/etc/httpd" '/opt/etc/httpd' 'ro'
    map_volume "$VOLROOT/etc/shibboleth" '/etc/shibboleth' 'Z'
    map_volume "$VOLROOT/var/log/" '/var/log' 'Z'
    map_volume "$VOLROOT/var/www/$DOCROOT" "/var/www/$DOCROOT" 'ro'
    map_volume "$SHAREDDATA_ROOT/03pyffTestWpv/md_feed" '/opt/md_feed' 'ro'

    # config redirects log files from jetty standard location to linux default path
    mkdir -p $VOLROOT/var/log/idp
    mkdir -p $VOLROOT/var/log/jetty
}


map_volume() {
    HOSTPATH=$1; CONTAINERPATH=$2; MOUNT_OPTION=$3
    export VOLMAPPING="$VOLMAPPING -v $HOSTPATH:$CONTAINERPATH:$MOUNT_OPTION"
    chkdir $HOSTPATH
}


create_user() {
    A_USERNAME=$1;A_UID=$2
    # first start: create user/group/host directories
    if ! id -u $A_USERNAME &>/dev/null; then
        if [[ ${OSTYPE//[0-9.]/} == 'darwin' ]]; then  # OSX
                $sudo sudo dseditgroup -o create -i $A_UID $A_USERNAME
                $sudo dscl . create /Users/$A_USERNAME UniqueID $A_UID
                $sudo dscl . create /Users/$A_USERNAME PrimaryGroupID $A_UID
        else  # Linux
          source /etc/os-release
          case $ID in
            centos|fedora|rhel)
                $sudo groupadd --non-unique -g $A_UID $A_USERNAME || true
                $sudo adduser --non-unique -M --gid $A_UID --comment "" --uid $A_UID $A_USERNAME
                ;;
            debian|ubuntu)
                $sudo groupadd -g $A_UID $A_USERNAME
                $sudo adduser --gid $A_UID --no-create-home --disabled-password --gecos "" --uid $A_UID $A_USERNAME
                ;;
            *)
                echo "do not know how to add user/group for OS ${OSTYPE} ${NAME}"
                ;;
          esac
        fi
    fi
}


init_sudo() {
    if [ $(id -u) -ne 0 ]; then
        sudo="sudo"
    fi
}

chkdir() {
    if [[ "${1:0:1}" == / ]]; then
        dir=$1  # absolute path
    else
        dir=$VOLROOT/$1
    fi
    if [ ! -e "$dir" ]; then
        echo "$0: Missing directory: $dir"
        exit 1
    fi
}


createdir() {
    if [[ "${1:0:1}" == / ]]; then
        dir=$1  # absolute path
    else
        dir=$VOLROOT/$1
    fi
    user=$2
    $sudo mkdir -p $dir
    $sudo chown -R $user:$user $dir
}


main